name: CPU Monitor (EKS)
on: push
permissions: # because use role-to-assume to login
  id-token: write
  contents: read
  # on:
  # project:
  #   types: deleted
jobs:
  aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            client:
              - 'app/client-aws/**'
            node:
              - 'app/node-aws/**'
            health:
              - 'app/health/**'
            stress:
              - 'app/stress/**'
            current:
              - 'app/current/**'
      - uses: docker/login-action@v3
        if: steps.filter.outputs.client == 'true'  || steps.filter.outputs.node == 'true'|| steps.filter.outputs.health == 'true'|| steps.filter.outputs.stress == 'true'|| steps.filter.outputs.current == 'true'
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: push client image to hub if there are any updadte in client-aws folder
        working-directory: ./app/client-aws
        if: steps.filter.outputs.client == 'true'
        run: |
          docker build -t susanssky/cpu-monitor-client-aws:latest .
          docker push susanssky/cpu-monitor-client-aws:latest

      - name: push node image to hub if there are any updadte in node-aws folder
        working-directory: ./app/node-aws
        if: steps.filter.outputs.node == 'true'
        run: |
          docker build -t susanssky/cpu-monitor-node-aws:latest .
          docker push susanssky/cpu-monitor-node-aws:latest

      - name: push stress image to hub if there are any updadte in stress folder
        working-directory: ./app/stress
        if: steps.filter.outputs.stress == 'true'
        run: |
          docker build -t susanssky/cpu-monitor-stress:latest .
          docker push susanssky/cpu-monitor-stress:latest

      - name: push current image to hub if there are any updadte in current folder
        working-directory: ./app/current
        if: steps.filter.outputs.current == 'true'
        run: |
          docker build -t susanssky/cpu-monitor-current:latest .
          docker push susanssky/cpu-monitor-current:latest

      - name: push health image to hub if there are any updadte in health folder
        working-directory: ./app/health
        if: steps.filter.outputs.health == 'true'
        run: |
          docker build -t susanssky/cpu-monitor-health:latest .
          docker push susanssky/cpu-monitor-health:latest

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false # for get the terraform output value
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-west-2
      # - name: Generate kubeconfig
      #   run: |
      #     aws eks update-kubeconfig --name cpu-monitor-eks
      - name: Terraform command
        working-directory: ./terraform/aws
        run: |
          terraform init
          terraform fmt -check
          terraform apply -auto-approve -var "database_username=${{ secrets.DB_USER }}" -var "database_password=${{ secrets.DB_PW }}" -var "your_role_or_user=${{ secrets.AWS_IAM_USER }}" -var "github_actions_role=${{ secrets.AWS_ROLE_TO_ASSUME }}"
